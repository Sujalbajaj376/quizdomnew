{"ast":null,"code":"var _jsxFileName = \"/Users/sujalbajaj/Desktop/quizdom/frontend/src/screens/Responses.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport LoadingScreen from './LoadingScreen';\nimport firebase from '../firebase/firebase';\nimport ResponsesTable from '../components/ResponsesTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Responses = ({\n  match\n}) => {\n  _s();\n  const quizId = match.params.quizCode;\n  const uid = firebase.auth().currentUser.uid;\n  const [loading, setLoading] = useState(true);\n  const [responses, setResponses] = useState([]);\n  useEffect(() => {\n    const getResponses = async () => {\n      const res = await fetch('/API/quizzes/responses', {\n        method: 'POST',\n        body: JSON.stringify({\n          quizCode: quizId,\n          uid\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await res.json();\n      console.log(result);\n      setResponses(result.finalResponse);\n      setLoading(false);\n    };\n    getResponses();\n  }, [quizId, uid]);\n  console.log(responses);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 22\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Responses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ResponsesTable, {\n      responses: responses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 4\n  }, this);\n};\n_s(Responses, \"zdeL87yqGzMq5mJZcGGNk73s5Ec=\");\n_c = Responses;\nexport default Responses;\nvar _c;\n$RefreshReg$(_c, \"Responses\");","map":{"version":3,"names":["React","useEffect","useState","LoadingScreen","firebase","ResponsesTable","jsxDEV","_jsxDEV","Responses","match","_s","quizId","params","quizCode","uid","auth","currentUser","loading","setLoading","responses","setResponses","getResponses","res","fetch","method","body","JSON","stringify","headers","result","json","console","log","finalResponse","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/sujalbajaj/Desktop/quizdom/frontend/src/screens/Responses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport LoadingScreen from './LoadingScreen'\nimport firebase from '../firebase/firebase'\nimport ResponsesTable from '../components/ResponsesTable'\n\nconst Responses = ({ match }) => {\n\tconst quizId = match.params.quizCode\n\tconst uid = firebase.auth().currentUser.uid\n\tconst [loading, setLoading] = useState(true)\n\tconst [responses, setResponses] = useState([])\n\n\tuseEffect(() => {\n\t\tconst getResponses = async () => {\n\t\t\tconst res = await fetch('/API/quizzes/responses', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({ quizCode: quizId, uid }),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst result = await res.json()\n\t\t\tconsole.log(result)\n\t\t\tsetResponses(result.finalResponse)\n\t\t\tsetLoading(false)\n\t\t}\n\t\tgetResponses()\n\t}, [quizId, uid])\n\tconsole.log(responses)\n\tif (loading) return <LoadingScreen />\n\telse\n\t\treturn (\n\t\t\t<div className='margin-top'>\n\t\t\t\t<h2>Responses</h2>\n\t\t\t\t<ResponsesTable responses={responses} />\n\t\t\t</div>\n\t\t)\n}\n\nexport default Responses\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,cAAc,MAAM,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,QAAQ;EACpC,MAAMC,GAAG,GAAGV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAACC,WAAW,CAACF,GAAG;EAC3C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACf,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,QAAQ,EAAEF,MAAM;UAAEG;QAAI,CAAC,CAAC;QAC/Cc,OAAO,EAAE;UACR,cAAc,EAAE;QACjB;MACD,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC/BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBT,YAAY,CAACS,MAAM,CAACI,aAAa,CAAC;MAClCf,UAAU,CAAC,KAAK,CAAC;IAClB,CAAC;IACDG,YAAY,CAAC,CAAC;EACf,CAAC,EAAE,CAACV,MAAM,EAAEG,GAAG,CAAC,CAAC;EACjBiB,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;EACtB,IAAIF,OAAO,EAAE,oBAAOV,OAAA,CAACJ,aAAa;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,MAEpC,oBACC9B,OAAA;IAAK+B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC1BhC,OAAA;MAAAgC,QAAA,EAAI;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB9B,OAAA,CAACF,cAAc;MAACc,SAAS,EAAEA;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAET,CAAC;AAAA3B,EAAA,CA/BKF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAiCf,eAAeA,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sujalbajaj/Desktop/quizdom/frontend/src/screens/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './UserDashBoard.css';\nimport CreatedQuizCard from '../components/CreatedQuizCard';\nimport JoinedQuizCard from '../components/JoinedQuizCard';\nimport LoadingScreen from './LoadingScreen';\nimport CreateQuiz from './CreateQuiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  user\n}) => {\n  _s();\n  const [createdQuizzes, setCreatedQuizzes] = useState([]);\n  const [attemptedQuizzes, setAttemptedQuizzes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editQuiz, setEditQuiz] = useState([]);\n  // Fetch Data from the API\n  useEffect(() => {\n    if (!user.uid) {\n      setLoading(false);\n      return;\n    }\n    const fetchQuizData = async () => {\n      const results = await fetch(`/API/users/${user.uid}`);\n      const quizData = await results.json();\n      if (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz);\n      if (quizData.attemptedQuiz) setAttemptedQuizzes(quizData.attemptedQuiz);\n      setLoading(false);\n    };\n    if (user) fetchQuizData();\n  }, [user]);\n  const editQuizHandle = async (title, questions, isOpen) => {\n    if (!title) setEditQuiz([]);else {\n      setLoading(true);\n      console.dir({\n        quizId: createdQuizzes[editQuiz]._id,\n        uid: user.uid,\n        title,\n        questions,\n        isOpen\n      });\n      const results = await fetch('/API/quizzes/edit', {\n        method: 'POST',\n        body: JSON.stringify({\n          quizId: createdQuizzes[editQuiz]._id,\n          uid: user.uid,\n          title,\n          questions,\n          isOpen\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const submitData = await results.json();\n      console.dir(submitData);\n      const temp = [...createdQuizzes];\n      temp[editQuiz[0]].title = title;\n      temp[editQuiz[0]].questions = questions;\n      temp[editQuiz[0]].isOpen = isOpen;\n      setCreatedQuizzes(temp);\n      setEditQuiz([]);\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 22\n  }, this);\n  if (editQuiz.length) return /*#__PURE__*/_jsxDEV(CreateQuiz, {\n    user: user,\n    quizTitle: createdQuizzes[editQuiz].title,\n    questions: createdQuizzes[editQuiz].questions,\n    isOpen: createdQuizzes[editQuiz].isOpen,\n    editQuizHandle: editQuizHandle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 4\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizzes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Created \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-holder\",\n        children: createdQuizzes.map((quiz, key) => /*#__PURE__*/_jsxDEV(CreatedQuizCard, {\n          index: key,\n          setEditQuiz: setEditQuiz,\n          title: quiz.title,\n          code: quiz._id,\n          responses: quiz.responses,\n          questions: quiz.questions.length,\n          isOpen: quiz.isOpen\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizzes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Attempted \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-holder\",\n        children: attemptedQuizzes.map((quiz, key) => /*#__PURE__*/_jsxDEV(JoinedQuizCard, {\n          title: quiz.title,\n          score: quiz.responses[0].score,\n          questions: quiz.totalQuestions\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n_s(UserDashboard, \"gKdbw1FQ5WIDqswtJtllLUl5WaY=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CreatedQuizCard","JoinedQuizCard","LoadingScreen","CreateQuiz","jsxDEV","_jsxDEV","UserDashboard","user","_s","createdQuizzes","setCreatedQuizzes","attemptedQuizzes","setAttemptedQuizzes","loading","setLoading","editQuiz","setEditQuiz","uid","fetchQuizData","results","fetch","quizData","json","createdQuiz","attemptedQuiz","editQuizHandle","title","questions","isOpen","console","dir","quizId","_id","method","body","JSON","stringify","headers","submitData","temp","fileName","_jsxFileName","lineNumber","columnNumber","length","quizTitle","className","children","map","quiz","key","index","code","responses","score","totalQuestions","_c","$RefreshReg$"],"sources":["/Users/sujalbajaj/Desktop/quizdom/frontend/src/screens/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport './UserDashBoard.css'\nimport CreatedQuizCard from '../components/CreatedQuizCard'\nimport JoinedQuizCard from '../components/JoinedQuizCard'\nimport LoadingScreen from './LoadingScreen'\nimport CreateQuiz from './CreateQuiz'\n\nconst UserDashboard = ({ user }) => {\n\tconst [createdQuizzes, setCreatedQuizzes] = useState([])\n\tconst [attemptedQuizzes, setAttemptedQuizzes] = useState([])\n\tconst [loading, setLoading] = useState(true)\n\tconst [editQuiz, setEditQuiz] = useState([])\n\t// Fetch Data from the API\n\tuseEffect(() => {\n\t\tif (!user.uid) {\n\t\t\tsetLoading(false)\n\t\t\treturn\n\t\t}\n\t\tconst fetchQuizData = async () => {\n\t\t\tconst results = await fetch(`/API/users/${user.uid}`)\n\t\t\tconst quizData = await results.json()\n\t\t\tif (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz)\n\t\t\tif (quizData.attemptedQuiz) setAttemptedQuizzes(quizData.attemptedQuiz)\n\t\t\tsetLoading(false)\n\t\t}\n\t\tif (user) fetchQuizData()\n\t}, [user])\n\n\tconst editQuizHandle = async (title, questions, isOpen) => {\n\t\tif (!title) setEditQuiz([])\n\t\telse {\n\t\t\tsetLoading(true)\n\t\t\tconsole.dir({\n\t\t\t\tquizId: createdQuizzes[editQuiz]._id,\n\t\t\t\tuid: user.uid,\n\t\t\t\ttitle,\n\t\t\t\tquestions,\n\t\t\t\tisOpen,\n\t\t\t})\n\t\t\tconst results = await fetch('/API/quizzes/edit', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tquizId: createdQuizzes[editQuiz]._id,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\ttitle,\n\t\t\t\t\tquestions,\n\t\t\t\t\tisOpen,\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst submitData = await results.json()\n\t\t\tconsole.dir(submitData)\n\t\t\tconst temp = [...createdQuizzes]\n\t\t\ttemp[editQuiz[0]].title = title\n\t\t\ttemp[editQuiz[0]].questions = questions\n\t\t\ttemp[editQuiz[0]].isOpen = isOpen\n\t\t\tsetCreatedQuizzes(temp)\n\t\t\tsetEditQuiz([])\n\t\t\tsetLoading(false)\n\t\t}\n\t}\n\n\tif (loading) return <LoadingScreen />\n\n\tif (editQuiz.length)\n\t\treturn (\n\t\t\t<CreateQuiz\n\t\t\t\tuser={user}\n\t\t\t\tquizTitle={createdQuizzes[editQuiz].title}\n\t\t\t\tquestions={createdQuizzes[editQuiz].questions}\n\t\t\t\tisOpen={createdQuizzes[editQuiz].isOpen}\n\t\t\t\teditQuizHandle={editQuizHandle}\n\t\t\t/>\n\t\t)\n\treturn (\n\t\t<div className='dash-body'>\n\t\t\t<div className='quizzes'>\n\t\t\t\t<div className='heading'>\n\t\t\t\t\t<div className='line-left' />\n\t\t\t\t\t<h2>Created </h2>\n\t\t\t\t\t<div className='line' />\n\t\t\t\t</div>\n\t\t\t\t<div className='card-holder'>\n\t\t\t\t\t{createdQuizzes.map((quiz, key) => (\n\t\t\t\t\t\t<CreatedQuizCard\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tindex={key}\n\t\t\t\t\t\t\tsetEditQuiz={setEditQuiz}\n\t\t\t\t\t\t\ttitle={quiz.title}\n\t\t\t\t\t\t\tcode={quiz._id}\n\t\t\t\t\t\t\tresponses={quiz.responses}\n\t\t\t\t\t\t\tquestions={quiz.questions.length}\n\t\t\t\t\t\t\tisOpen={quiz.isOpen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='quizzes'>\n\t\t\t\t<div className='heading'>\n\t\t\t\t\t<div className='line-left' />\n\t\t\t\t\t<h2>Attempted </h2>\n\t\t\t\t\t<div className='line' />\n\t\t\t\t</div>\n\t\t\t\t<div className='card-holder'>\n\t\t\t\t\t{attemptedQuizzes.map((quiz, key) => (\n\t\t\t\t\t\t<JoinedQuizCard\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\ttitle={quiz.title}\n\t\t\t\t\t\t\tscore={quiz.responses[0].score}\n\t\t\t\t\t\t\tquestions={quiz.totalQuestions}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default UserDashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sujalbajaj/Desktop/quizdom/frontend/src/screens/AttemptBlindQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoadingScreen from './LoadingScreen';\nimport AttemptedModal from './AttemptedModal';\n// Speech Recognition Imports\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttemptBlindQuiz = ({\n  match\n}) => {\n  _s();\n  const [commands, setCommands] = useState([]);\n  const speak = string => synthRef.current.speak(new SpeechSynthesisUtterance(string));\n  // Quiz Data Model\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const quizCode = match.params.quizCode;\n  const [questions, setQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n  const [quizTitle, setQuizTitle] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const uid = 'dummy_uid'; // Placeholder, as Firebase is removed\n\n  // Using Speech Recognition Transcript\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition({\n    commands\n  });\n  const synthRef = React.useRef(window.speechSynthesis);\n  console.log('transcript:' + transcript);\n  const spaceFunction = React.useCallback(event => {\n    if (event.keyCode === 32) {\n      if (quizTitle === 'ERR:QUIZ_NOT_FOUND') speak('The quiz you requested was not found.');\n      // For Quiz not accessible\n      else if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED') speak('Access is not granted by the creator.');else if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED') speak('You have already attempted this quiz.');else {\n        SpeechRecognition.startListening({\n          continuous: true\n        });\n        console.log('start listening...');\n        speak('Listening Started.');\n        resetTranscript();\n      }\n    }\n  }, [resetTranscript, quizTitle]);\n\n  // Speech Recognition useEffect\n  useEffect(() => {\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) alert('Oops, your browser is not supported!');else {\n      document.addEventListener('keydown', spaceFunction);\n    }\n    return () => {\n      document.removeEventListener('keydown', spaceFunction);\n      SpeechRecognition.abortListening();\n    };\n  }, [spaceFunction]);\n\n  // Fetch Quiz Data useEffect\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      const res = await fetch('/API/quizzes/join', {\n        method: 'POST',\n        body: JSON.stringify({\n          quizId: quizCode,\n          uid\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const quizData = await res.json();\n      setLoading(false);\n      if (quizData.error) {\n        // SpeechRecognition.stopListening()\n        setQuizTitle(quizData.error);\n        if (quizData.error === 'ERR:QUIZ_NOT_FOUND') speak('The quiz you requested was not found.');\n        // For Quiz not accessible\n        else if (quizData.error === 'ERR:QUIZ_ACCESS_DENIED') speak('Access is not granted by the creator.');else if (quizData.error === 'ERR:QUIZ_ALREADY_ATTEMPTED') speak('You have already attempted this quiz.');\n      } else {\n        setQuizTitle(quizData.title);\n        setQuestions(quizData.questions);\n        const temp = quizData.questions.map(question => {\n          return {\n            id: question.id,\n            title: question.title,\n            optionType: question.optionType,\n            selectedOptions: []\n          };\n        });\n        setAttemptedQuestions(temp);\n      }\n    };\n    fetchQuiz();\n  }, [quizCode, uid]);\n  const submitQuiz = React.useCallback(async () => {\n    // send attemped Questions to backend\n    try {\n      const res = await fetch('/API/quizzes/submit', {\n        method: 'POST',\n        body: JSON.stringify({\n          uid,\n          quizId: quizCode,\n          questions: attemptedQuestions\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const body = await res.json();\n      setResult(body);\n      setShowModal(true);\n      if (body.error === 'ERR:QUIZ_ALREADY_ATTEMPTED') speak('The Quiz has already been submitted.');else speak(`Your score is ${body.score} out of ${attemptedQuestions.length}`);\n      SpeechRecognition.abortListening();\n      console.log('res body : ', body);\n    } catch (e) {\n      console.log('Error Submitting quiz', e);\n    }\n  }, [quizCode, attemptedQuestions, uid]);\n\n  // Commands UseEffect\n  useEffect(() => {\n    const selectOption = option => {\n      const temp = [...attemptedQuestions];\n      const options = temp[currentIndex].selectedOptions;\n      if (!options.includes(option)) {\n        if (attemptedQuestions[currentIndex].optionType === 'radio') options[0] = option;else options.push(option);\n        temp[currentIndex].selectedOptions = options;\n        setAttemptedQuestions(temp);\n      }\n    };\n    const speakQuestion = index => {\n      speak(`Question number ${index + 1}:`);\n      speak(questions[index].title);\n      let choice = questions[index].optionType === 'radio' ? ' only 1 option.' : ' multiple options.';\n      speak('You can choose ' + choice);\n      questions[index].options.forEach((op, i) => {\n        speak(`Option ${i + 1} : ${op.text}`);\n      });\n    };\n    const temp = [{\n      command: ['reset', 'cancel'],\n      callback: () => {\n        synthRef.current.cancel();\n        resetTranscript();\n      }\n    }, {\n      command: 'Instructions',\n      callback: () => {\n        speak('Use the following voice commands to interact with the application. Start Quiz to initialize the quiz. Repeat the current question command to repeat the focused question. Select or choose option number command for choosing the correct option. Next question to move to the next consecutive question and Previous Question to move to the previous consecutive question.');\n        resetTranscript();\n      }\n    }, {\n      command: ['(*) title', '(*) start (*)'],\n      callback: () => {\n        synthRef.current.cancel();\n        speak(`The Quiz title is: ${quizTitle}`);\n        speakQuestion(currentIndex);\n        resetTranscript();\n      },\n      matchInterim: true\n    }, {\n      command: ['select option :option', 'choose option :option'],\n      callback: option => {\n        synthRef.current.cancel();\n        if (option > 0 && option <= questions[currentIndex].options.length || ['for', 'to'].some(op => op === option)) {\n          if (option === 'for') option = 4;else if (option === 'to') option = 2;\n          console.log('option :' + option);\n          speak(`You chose option ${option} : ${questions[currentIndex].options[option - 1].text}`);\n          selectOption(questions[currentIndex].options[option - 1].text);\n        } else if (Number.isInteger(option)) speak('No such option as ' + option);\n        resetTranscript();\n      },\n      matchInterim: true\n    }, {\n      command: '(*) next question',\n      callback: () => {\n        synthRef.current.cancel();\n        if (currentIndex < questions.length - 1) {\n          setCurrentIndex(currentIndex + 1);\n          speakQuestion(currentIndex + 1);\n        } else {\n          speak('That was the last Question of the Quiz.');\n        }\n        resetTranscript();\n      },\n      matchInterim: true\n    }, {\n      command: '(*) previous question',\n      callback: () => {\n        synthRef.current.cancel();\n        if (currentIndex > 0) {\n          setCurrentIndex(currentIndex - 1);\n          speakQuestion(currentIndex - 1);\n        } else {\n          speak('That was the first Question of the Quiz.');\n        }\n        resetTranscript();\n      },\n      matchInterim: true\n    }, {\n      command: 'submit quiz',\n      callback: () => {\n        if (Object.keys(result).length <= 0) submitQuiz();\n        resetTranscript();\n      },\n      matchInterim: true\n    }, {\n      command: ['(*) repeat question :number'],\n      callback: (dummy, number) => {\n        synthRef.current.cancel();\n        if (number > 0 && number <= questions.length || ['for', 'to'].some(op => op === number)) {\n          if (number === 'for') number = 4;else if (number === 'to') number = 2;\n          setCurrentIndex(number - 1);\n          speakQuestion(number - 1);\n        } else speak('Question Number not recognized. Kindly repeat it');\n        resetTranscript();\n      },\n      matchInterim: true\n    }, {\n      command: ['repeat the current question', 'repeat the question', 'repeat question'],\n      callback: () => {\n        synthRef.current.cancel();\n        speakQuestion(currentIndex);\n        resetTranscript();\n      },\n      matchInterim: true\n    }];\n    setCommands(temp);\n  }, [quizTitle, resetTranscript, questions, currentIndex, attemptedQuestions, submitQuiz, result]);\n  const handleOptionSelect = (e, option, index) => {\n    const temp = [...attemptedQuestions];\n    const options = temp[index].selectedOptions;\n    console.log('index:' + index);\n    if (!options.includes(option) && e.target.checked) {\n      if (attemptedQuestions[index].optionType === 'radio') options[0] = option;else options.push(option);\n    }\n    if (options.includes(option) && !e.target.checked) {\n      const i = options.indexOf(option);\n      options.splice(i, 1);\n    }\n    temp[index].selectedOptions = options;\n    setAttemptedQuestions(temp);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 22\n  }, this);\n\n  // For Quiz not Found\n  if (quizTitle === 'ERR:QUIZ_NOT_FOUND') {\n    // synthRef.current.cancel()\n    // speak('The quiz you requested was not found.')\n    // resetTranscript()\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"404 Quiz Not Found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logo-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 6\n        }, this), \"dom\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Go back to \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/join-quiz\",\n          children: \"Join Quiz \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this), \"Page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 4\n    }, this);\n  }\n  // For Quiz not accessible\n  else if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED') {\n    // speak('Access is not granted by the creator.')\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Access is Not Granted by the Creator. Please contact Quiz Creator.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logo-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 6\n        }, this), \"dom\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Go back to \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/join-quiz\",\n          children: \"Join Quiz \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }, this), \"Page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 4\n    }, this);\n  } else if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED') {\n    // speak('You have already attempted this quiz.')\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You have already taken the Quiz.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logo-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 6\n        }, this), \"dom\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Go back to \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/join-quiz\",\n          children: \"Join Quiz \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }, this), \"Page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 4\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"create-quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: quizTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 6\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attempQuestionCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title\",\n          children: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-div\",\n          children: question.options.map((option, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [question.optionType === 'radio' ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `option${index}`,\n              checked: attemptedQuestions.length ? attemptedQuestions[index].selectedOptions.includes(option.text) : false,\n              onChange: e => handleOptionSelect(e, option.text, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 12\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"option\",\n              checked: attemptedQuestions.length ? attemptedQuestions[index].selectedOptions.includes(option.text) : false,\n              onChange: e => handleOptionSelect(e, option.text, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                padding: '0px 5px'\n              },\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 11\n            }, this)]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 10\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 8\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button wd-200\",\n        onClick: submitQuiz,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(AttemptedModal, {\n        result: result,\n        showModal: showModal,\n        totalScore: questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 4\n  }, this);\n};\n_s(AttemptBlindQuiz, \"395vEOv0x4I/4uQ1V8qTKKWRvFs=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = AttemptBlindQuiz;\nexport default AttemptBlindQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptBlindQuiz\");","map":{"version":3,"names":["React","useState","useEffect","Link","LoadingScreen","AttemptedModal","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","AttemptBlindQuiz","match","_s","commands","setCommands","speak","string","synthRef","current","SpeechSynthesisUtterance","currentIndex","setCurrentIndex","quizCode","params","questions","setQuestions","attemptedQuestions","setAttemptedQuestions","quizTitle","setQuizTitle","loading","setLoading","result","setResult","showModal","setShowModal","uid","transcript","resetTranscript","useRef","window","speechSynthesis","console","log","spaceFunction","useCallback","event","keyCode","startListening","continuous","browserSupportsSpeechRecognition","alert","document","addEventListener","removeEventListener","abortListening","fetchQuiz","res","fetch","method","body","JSON","stringify","quizId","headers","quizData","json","error","title","temp","map","question","id","optionType","selectedOptions","submitQuiz","score","length","e","selectOption","option","options","includes","push","speakQuestion","index","choice","forEach","op","i","text","command","callback","cancel","matchInterim","some","Number","isInteger","Object","keys","dummy","number","handleOptionSelect","target","checked","indexOf","splice","fileName","_jsxFileName","lineNumber","columnNumber","className","children","to","ind","type","name","onChange","style","padding","onClick","totalScore","_c","$RefreshReg$"],"sources":["/Users/sujalbajaj/Desktop/quizdom/frontend/src/screens/AttemptBlindQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport LoadingScreen from './LoadingScreen'\nimport AttemptedModal from './AttemptedModal'\n// Speech Recognition Imports\nimport SpeechRecognition, {\n\tuseSpeechRecognition\n} from 'react-speech-recognition'\n\nconst AttemptBlindQuiz = ({ match }) => {\n\tconst [commands, setCommands] = useState([])\n\tconst speak = (string) =>\n\t\tsynthRef.current.speak(new SpeechSynthesisUtterance(string))\n\t// Quiz Data Model\n\tconst [currentIndex, setCurrentIndex] = useState(0)\n\tconst quizCode = match.params.quizCode\n\tconst [questions, setQuestions] = useState([])\n\tconst [attemptedQuestions, setAttemptedQuestions] = useState([])\n\tconst [quizTitle, setQuizTitle] = useState('')\n\tconst [loading, setLoading] = useState(true)\n\tconst [result, setResult] = useState({})\n\tconst [showModal, setShowModal] = useState(false)\n\tconst uid = 'dummy_uid' // Placeholder, as Firebase is removed\n\n\t// Using Speech Recognition Transcript\n\tconst { transcript, resetTranscript } = useSpeechRecognition({\n\t\tcommands\n\t})\n\tconst synthRef = React.useRef(window.speechSynthesis)\n\tconsole.log('transcript:' + transcript)\n\tconst spaceFunction = React.useCallback(\n\t\t(event) => {\n\t\t\tif (event.keyCode === 32) {\n\t\t\t\tif (quizTitle === 'ERR:QUIZ_NOT_FOUND')\n\t\t\t\t\tspeak('The quiz you requested was not found.')\n\t\t\t\t// For Quiz not accessible\n\t\t\t\telse if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED')\n\t\t\t\t\tspeak('Access is not granted by the creator.')\n\t\t\t\telse if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED')\n\t\t\t\t\tspeak('You have already attempted this quiz.')\n\t\t\t\telse {\n\t\t\t\t\tSpeechRecognition.startListening({ continuous: true })\n\t\t\t\t\tconsole.log('start listening...')\n\t\t\t\t\tspeak('Listening Started.')\n\t\t\t\t\tresetTranscript()\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[resetTranscript, quizTitle]\n\t)\n\n\t// Speech Recognition useEffect\n\tuseEffect(() => {\n\t\tif (!SpeechRecognition.browserSupportsSpeechRecognition())\n\t\t\talert('Oops, your browser is not supported!')\n\t\telse {\n\t\t\tdocument.addEventListener('keydown', spaceFunction)\n\t\t}\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', spaceFunction)\n\t\t\tSpeechRecognition.abortListening()\n\t\t}\n\t}, [spaceFunction])\n\n\t// Fetch Quiz Data useEffect\n\tuseEffect(() => {\n\t\tconst fetchQuiz = async () => {\n\t\t\tconst res = await fetch('/API/quizzes/join', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({ quizId: quizCode, uid }),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst quizData = await res.json()\n\t\t\tsetLoading(false)\n\t\t\tif (quizData.error) {\n\t\t\t\t// SpeechRecognition.stopListening()\n\t\t\t\tsetQuizTitle(quizData.error)\n\t\t\t\tif (quizData.error === 'ERR:QUIZ_NOT_FOUND')\n\t\t\t\t\tspeak('The quiz you requested was not found.')\n\t\t\t\t// For Quiz not accessible\n\t\t\t\telse if (quizData.error === 'ERR:QUIZ_ACCESS_DENIED')\n\t\t\t\t\tspeak('Access is not granted by the creator.')\n\t\t\t\telse if (quizData.error === 'ERR:QUIZ_ALREADY_ATTEMPTED')\n\t\t\t\t\tspeak('You have already attempted this quiz.')\n\t\t\t} else {\n\t\t\t\tsetQuizTitle(quizData.title)\n\t\t\t\tsetQuestions(quizData.questions)\n\n\t\t\t\tconst temp = quizData.questions.map((question) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: question.id,\n\t\t\t\t\t\ttitle: question.title,\n\t\t\t\t\t\toptionType: question.optionType,\n\t\t\t\t\t\tselectedOptions: []\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tsetAttemptedQuestions(temp)\n\t\t\t}\n\t\t}\n\t\tfetchQuiz()\n\t}, [quizCode, uid])\n\tconst submitQuiz = React.useCallback(async () => {\n\t\t// send attemped Questions to backend\n\t\ttry {\n\t\t\tconst res = await fetch('/API/quizzes/submit', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tuid,\n\t\t\t\t\tquizId: quizCode,\n\t\t\t\t\tquestions: attemptedQuestions\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst body = await res.json()\n\t\t\tsetResult(body)\n\t\t\tsetShowModal(true)\n\t\t\tif (body.error === 'ERR:QUIZ_ALREADY_ATTEMPTED')\n\t\t\t\tspeak('The Quiz has already been submitted.')\n\t\t\telse\n\t\t\t\tspeak(`Your score is ${body.score} out of ${attemptedQuestions.length}`)\n\t\t\tSpeechRecognition.abortListening()\n\t\t\tconsole.log('res body : ', body)\n\t\t} catch (e) {\n\t\t\tconsole.log('Error Submitting quiz', e)\n\t\t}\n\t}, [quizCode, attemptedQuestions, uid])\n\n\t// Commands UseEffect\n\tuseEffect(() => {\n\t\tconst selectOption = (option) => {\n\t\t\tconst temp = [...attemptedQuestions]\n\t\t\tconst options = temp[currentIndex].selectedOptions\n\t\t\tif (!options.includes(option)) {\n\t\t\t\tif (attemptedQuestions[currentIndex].optionType === 'radio')\n\t\t\t\t\toptions[0] = option\n\t\t\t\telse options.push(option)\n\t\t\t\ttemp[currentIndex].selectedOptions = options\n\t\t\t\tsetAttemptedQuestions(temp)\n\t\t\t}\n\t\t}\n\t\tconst speakQuestion = (index) => {\n\t\t\tspeak(`Question number ${index + 1}:`)\n\t\t\tspeak(questions[index].title)\n\t\t\tlet choice =\n\t\t\t\tquestions[index].optionType === 'radio'\n\t\t\t\t\t? ' only 1 option.'\n\t\t\t\t\t: ' multiple options.'\n\n\t\t\tspeak('You can choose ' + choice)\n\t\t\tquestions[index].options.forEach((op, i) => {\n\t\t\t\tspeak(`Option ${i + 1} : ${op.text}`)\n\t\t\t})\n\t\t}\n\t\tconst temp = [\n\t\t\t{\n\t\t\t\tcommand: ['reset', 'cancel'],\n\t\t\t\tcallback: () => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tresetTranscript()\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: 'Instructions',\n\t\t\t\tcallback: () => {\n\t\t\t\t\tspeak(\n\t\t\t\t\t\t'Use the following voice commands to interact with the application. Start Quiz to initialize the quiz. Repeat the current question command to repeat the focused question. Select or choose option number command for choosing the correct option. Next question to move to the next consecutive question and Previous Question to move to the previous consecutive question.'\n\t\t\t\t\t)\n\t\t\t\t\tresetTranscript()\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: ['(*) title', '(*) start (*)'],\n\t\t\t\tcallback: () => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tspeak(`The Quiz title is: ${quizTitle}`)\n\t\t\t\t\tspeakQuestion(currentIndex)\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: ['select option :option', 'choose option :option'],\n\t\t\t\tcallback: (option) => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tif (\n\t\t\t\t\t\t(option > 0 && option <= questions[currentIndex].options.length) ||\n\t\t\t\t\t\t['for', 'to'].some((op) => op === option)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (option === 'for') option = 4\n\t\t\t\t\t\telse if (option === 'to') option = 2\n\t\t\t\t\t\tconsole.log('option :' + option)\n\t\t\t\t\t\tspeak(\n\t\t\t\t\t\t\t`You chose option ${option} : ${\n\t\t\t\t\t\t\t\tquestions[currentIndex].options[option - 1].text\n\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\tselectOption(questions[currentIndex].options[option - 1].text)\n\t\t\t\t\t} else if (Number.isInteger(option))\n\t\t\t\t\t\tspeak('No such option as ' + option)\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: '(*) next question',\n\t\t\t\tcallback: () => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tif (currentIndex < questions.length - 1) {\n\t\t\t\t\t\tsetCurrentIndex(currentIndex + 1)\n\t\t\t\t\t\tspeakQuestion(currentIndex + 1)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tspeak('That was the last Question of the Quiz.')\n\t\t\t\t\t}\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: '(*) previous question',\n\t\t\t\tcallback: () => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tif (currentIndex > 0) {\n\t\t\t\t\t\tsetCurrentIndex(currentIndex - 1)\n\t\t\t\t\t\tspeakQuestion(currentIndex - 1)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tspeak('That was the first Question of the Quiz.')\n\t\t\t\t\t}\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: 'submit quiz',\n\t\t\t\tcallback: () => {\n\t\t\t\t\tif (Object.keys(result).length <= 0) submitQuiz()\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: ['(*) repeat question :number'],\n\t\t\t\tcallback: (dummy, number) => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tif (\n\t\t\t\t\t\t(number > 0 && number <= questions.length) ||\n\t\t\t\t\t\t['for', 'to'].some((op) => op === number)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (number === 'for') number = 4\n\t\t\t\t\t\telse if (number === 'to') number = 2\n\n\t\t\t\t\t\tsetCurrentIndex(number - 1)\n\t\t\t\t\t\tspeakQuestion(number - 1)\n\t\t\t\t\t} else speak('Question Number not recognized. Kindly repeat it')\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommand: [\n\t\t\t\t\t'repeat the current question',\n\t\t\t\t\t'repeat the question',\n\t\t\t\t\t'repeat question'\n\t\t\t\t],\n\t\t\t\tcallback: () => {\n\t\t\t\t\tsynthRef.current.cancel()\n\t\t\t\t\tspeakQuestion(currentIndex)\n\t\t\t\t\tresetTranscript()\n\t\t\t\t},\n\t\t\t\tmatchInterim: true\n\t\t\t}\n\t\t]\n\t\tsetCommands(temp)\n\t}, [\n\t\tquizTitle,\n\t\tresetTranscript,\n\t\tquestions,\n\t\tcurrentIndex,\n\t\tattemptedQuestions,\n\t\tsubmitQuiz,\n\t\tresult\n\t])\n\n\tconst handleOptionSelect = (e, option, index) => {\n\t\tconst temp = [...attemptedQuestions]\n\t\tconst options = temp[index].selectedOptions\n\t\tconsole.log('index:' + index)\n\t\tif (!options.includes(option) && e.target.checked) {\n\t\t\tif (attemptedQuestions[index].optionType === 'radio') options[0] = option\n\t\t\telse options.push(option)\n\t\t}\n\t\tif (options.includes(option) && !e.target.checked) {\n\t\t\tconst i = options.indexOf(option)\n\t\t\toptions.splice(i, 1)\n\t\t}\n\t\ttemp[index].selectedOptions = options\n\t\tsetAttemptedQuestions(temp)\n\t}\n\n\tif (loading) return <LoadingScreen />\n\n\t// For Quiz not Found\n\tif (quizTitle === 'ERR:QUIZ_NOT_FOUND') {\n\t\t// synthRef.current.cancel()\n\t\t// speak('The quiz you requested was not found.')\n\t\t// resetTranscript()\n\t\treturn (\n\t\t\t<div className='loading'>\n\t\t\t\t<h1>404 Quiz Not Found!</h1>\n\t\t\t\t<div id='logo-name'>\n\t\t\t\t\t<b>Quiz</b>dom\n\t\t\t\t</div>\n\t\t\t\t<h3>\n\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t)\n\t}\n\t// For Quiz not accessible\n\telse if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED') {\n\t\t// speak('Access is not granted by the creator.')\n\t\treturn (\n\t\t\t<div className='loading'>\n\t\t\t\t<h2>\n\t\t\t\t\tQuiz Access is Not Granted by the Creator. Please contact Quiz\n\t\t\t\t\tCreator.\n\t\t\t\t</h2>\n\t\t\t\t<div id='logo-name'>\n\t\t\t\t\t<b>Quiz</b>dom\n\t\t\t\t</div>\n\t\t\t\t<h3>\n\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t)\n\t} else if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED') {\n\t\t// speak('You have already attempted this quiz.')\n\t\treturn (\n\t\t\t<div className='loading'>\n\t\t\t\t<h2>You have already taken the Quiz.</h2>\n\t\t\t\t<div id='logo-name'>\n\t\t\t\t\t<b>Quiz</b>dom\n\t\t\t\t</div>\n\t\t\t\t<h3>\n\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t)\n\t} else\n\t\treturn (\n\t\t\t<div id='main-body'>\n\t\t\t\t<div id='create-quiz-body'>\n\t\t\t\t\t<div className='quiz-header'>\n\t\t\t\t\t\t<h2>{quizTitle}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t{questions.map((question, index) => (\n\t\t\t\t\t\t<div className='attempQuestionCard' key={index}>\n\t\t\t\t\t\t\t<div id='title'>{question.title}</div>\n\t\t\t\t\t\t\t<div className='option-div'>\n\t\t\t\t\t\t\t\t{question.options.map((option, ind) => (\n\t\t\t\t\t\t\t\t\t<div className='option' key={ind}>\n\t\t\t\t\t\t\t\t\t\t{question.optionType === 'radio' ? (\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\t\t\tname={`option${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\tattemptedQuestions.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? attemptedQuestions[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ].selectedOptions.includes(option.text)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleOptionSelect(e, option.text, index)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\t\tname='option'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\tattemptedQuestions.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? attemptedQuestions[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ].selectedOptions.includes(option.text)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleOptionSelect(e, option.text, index)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<label style={{ padding: '0px 5px' }}>{option.text}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t<button className='button wd-200' onClick={submitQuiz}>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t\t<AttemptedModal\n\t\t\t\t\t\tresult={result}\n\t\t\t\t\t\tshowModal={showModal}\n\t\t\t\t\t\ttotalScore={questions.length}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n}\n\nexport default AttemptBlindQuiz\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}